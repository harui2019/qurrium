# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on:
  pull_request:
    branches:
      - pre-release
      - pre-release-*
      - main
      - main-*
      - dev
      - dev-*

jobs:
  test_skip:
    if: ${{ startsWith(github.event.pull_request.title, 'skip-test:') }}
    name: When Test is Skipped
    runs-on: ubuntu-latest
    steps:
      - name: Skip Test
        run: echo "Skip Test"

  test_py_latest:
    if: ${{ !startsWith(github.event.pull_request.title, 'skip-test:') }}
    name: Test on Python Latest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.CI_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Run Test Unit
        uses: ./.github/actions/test-unit

  test_py_oldest:
    name: Test on Python Oldest Supported
    if: ${{ !startsWith(github.event.pull_request.title, 'skip-test:') }}
    needs: test_py_latest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.CI_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Run Test Unit
        uses: ./.github/actions/test-unit

  test_other:
    name: Test on Python Other Versions
    if: ${{ !startsWith(github.event.pull_request.title, 'skip-test:') }}
    needs:
      - test_py_latest
      - test_py_oldest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.CI_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Run Test Unit
        uses: ./.github/actions/test-unit
