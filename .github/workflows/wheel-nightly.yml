---
name: Wheel Builds Nightly
on:
  pull_request:
    branches:
      - pre-release
      - pre-release-*
    types:
      - closed

jobs:
  build_wheels:
    if: github.repository == 'harui2019/qurry' && github.event.pull_request.merged == 'true'
    name: Build wheels on ${{matrix.vers}} by ${{ matrix.os }}/${{ matrix.archs }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - vers: linux-x86_64
            os: ubuntu-latest
            archs: X64
          - vers: macOS-x86_64 # Avaliability confirmed by act
            os: macos-13
            archs: X64
          - vers: macOS-ARM64 # Avaliability confirmed by act
            os: macos-latest
            archs: ARM64
          - vers: linux-aarch64 # Avaliability confirmed by act
            os: macos-latest
            archs: ARM64
          # Disabled for runner setup is not completed
          # See: https://github.com/harui2019/qurry/issues/200
          # - vers: Windows-x86
          #   os: windows-latest
          #   archs: X64
          # - vers: Windows-arm64
          #   os: windows-latest
          #   archs: ARM64
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    environment:
      name: testpypi
      url: https://test.pypi.org/p/qurry

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
        if: matrix.vers != 'macOS-ARM64'
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          architecture: "arm64" # For MacOS ARM64
        if: matrix.vers == 'macOS-ARM64'

      - name: Python Version and Architecture Check
        run: |
          python --version
          python -c "from distutils import util; print(util.get_platform())"

      - name: Install Rust
        if: runner.os != 'Windows'
        uses: dtolnay/rust-toolchain@stable

      - name: Install Required Python Packages
        run: |
          python -m pip install --upgrade pip pipenv wheel
          python -m pip install --upgrade auditwheel auditwheel-symbols
          python -m pip install --upgrade setuptools_rust Cython setuptools toml wheel cibuildwheel

      - name: Reversion Nightly
        run: python get_version.py --release nightly

      - name: Build wheels on Linux of x86 series
        if: runner.os == 'Linux' && matrix.archs == 'X64'
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Build wheels on MacOS of x86 series
        if: runner.os == 'macOS' && matrix.archs == 'X64'
        run: |
          python -m cibuildwheel --output-dir wheelhouse --platform macos --archs x86_64
        env:
          CIBW_ARCHS_MACOS: x86_64

      - name: Build wheels on Windows of x86 series
        if: runner.os == 'Windows' && matrix.archs == 'X64'
        run: python -m cibuildwheel --output-dir wheelhouse
      # Attention: Windows runner requires Rust already installed
      # For there is not reliable way to install Rust on Windows runner
      # See: https://github.com/harui2019/qurry/issues/173

      - name: Build wheels on Linux of Arm series by Apple Silicon
        if: runner.os == 'macOS' && matrix.archs == 'ARM64' && matrix.vers == 'linux-aarch64'
        run: python -m cibuildwheel --output-dir wheelhouse --platform linux --archs aarch64

      - name: Build wheels on MacOS of ARM series
        if: runner.os == 'macOS' && matrix.archs == 'ARM64' && matrix.vers == 'macOS-ARM64'
        run: python -m cibuildwheel --output-dir wheelhouse --platform macos

      - name: Wheelhouse Upload
        if: runner.os != 'Linux' || matrix.archs != 'X64'
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          name: shared-wheel-builds

      - name: Early Publish distribution üì¶ to TestPyPI for Linux X86_64
        if: runner.os == 'Linux' && matrix.archs == 'X64'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: wheelhouse
          repository-url: https://test.pypi.org/legacy/

  publish-to-testpypi:
    if: github.repository == 'harui2019/qurry' && github.event.pull_request.merged == 'true'
    name: Publish Python üêç distribution üì¶ to TestPyPI ${{ matrix.archs }}
    runs-on: ubuntu-latest
    needs:
      - build_wheels
    strategy:
      fail-fast: false
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    environment:
      name: testpypi
      url: https://test.pypi.org/p/qurry

    steps:
      - name: Download all the dists ${{ matrix.archs }}
        uses: actions/download-artifact@v3
        with:
          name: shared-wheel-builds
          path: deploy
      - name: Publish distribution üì¶ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: deploy
          repository-url: https://test.pypi.org/legacy/
