---
name: Wheel Builds
on:
  push:
    tags:
      - "*"
    branches:
      - main

jobs:
  build_wheels_linux_x86:
    if: github.repository == 'harui2019/qurry'
    name: Build wheels on Linux-x86
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Reversion
        run: python get_version.py --release stable
      - name: Update Pip
        run: |
          pip install --upgrade pipenv wheel pip
          pip install setuptools_rust setuptools
          pip install .
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          name: shared-wheel-builds-x86

  build_wheels_macos_x86:
    if: github.repository == 'harui2019/qurry'
    name: Build wheels on MacOS of x86 series
    runs-on: macos-11
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Reversion
        run: python get_version.py --release stable
      - name: Update Pip
        run: |
          pip install --upgrade pipenv wheel pip
          pip install setuptools_rust setuptools
          pip install .
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          name: shared-wheel-builds-x86

  # build_wheels_windows_x86:
  #   if: github.repository == 'harui2019/qurry'
  #   name: Build wheels on Windows of x86 series
  #   runs-on: windows-latest
  #   strategy:
  #     fail-fast: false
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.CI_TOKEN }}
  #         submodules: true
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.11"
  #     - name: Reversion
  #       run: python get_version.py --release stable
  #     - name: Update Pip
  #       run: |
  #         pip install --upgrade pipenv wheel pip
  #         pip install setuptools_rust setuptools
  #         pip install .
  #     - name: Install Rust
  #       uses: dtolnay/rust-toolchain@stable
  #     - name: Build wheels
  #       uses: pypa/cibuildwheel@v2.16.2
  #       env:
  #         CIBW_PLATFORM: windows
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         path: ./wheelhouse/*.whl
  #         name: shared-wheel-builds-x86

  publish_to_pypi_x86:
    if: github.repository == 'harui2019/qurry'
    name: Publish Python üêç distribution üì¶ to PyPI (Common Distro)
    needs:
      - build_wheels_linux_x86
      - build_wheels_macos_x86
      # - build_wheels_windows_x86
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://test.pypi.org/p/qurrium
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: shared-wheel-builds-x86
          path: deploy
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: deploy

  # ---

  build_wheels_macos_arm:
    if: github.repository == 'harui2019/qurry'
    name: Build wheels on MacOS of arm64
    runs-on: macos-11
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Reversion
        run: python get_version.py --release stable
      - name: Install Python and Update Pip
        run: |
          pip install --upgrade pipenv wheel pip
          pip install setuptools_rust setuptools
          pip install .
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_BEFORE_ALL: rustup target add aarch64-apple-darwin
          CIBW_ARCHS_MACOS: arm64 universal2
          CIBW_ENVIRONMENT: >-
            CARGO_BUILD_TARGET="aarch64-apple-darwin"
            PYO3_CROSS_LIB_DIR="/Library/Frameworks/Python.framework/Versions/$(python -c 'import sys; print(str(sys.version_info[0])+"."+str(sys.version_info[1]))')/lib/python$(python -c 'import sys; print(str(sys.version_info[0])+"."+str(sys.version_info[1]))')"
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          name: shared-wheel-builds-arm

  # build_wheels_aarch64:
  #   if: github.repository == 'harui2019/qurry'
  #   name: Build wheels on Linux of aarch64
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #   strategy:
  #     fail-fast: false
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.CI_TOKEN }}
  #         submodules: true
  #     - uses: actions/setup-python@v4
  #       name: Install Python
  #       with:
  #         python-version: "3.10"
  #     - name: Reversion
  #       run: python get_version.py --release stable
  #     - name: Install Rust
  #       uses: dtolnay/rust-toolchain@stable
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #       with:
  #         platforms: all
  #     - name: Build wheels
  #       uses: pypa/cibuildwheel@v2.16.2
  #       env:
  #         CIBW_ARCHS_LINUX: aarch64
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         path: ./wheelhouse/*.whl
  #         name: shared-wheel-builds-arm

  publish-to-pypi-arm:
    if: github.repository == 'harui2019/qurry'
    name: Publish Python üêç distribution üì¶ to PyPI (aarch64/ARM)
    needs:
      - build_wheels_macos_arm
      # - build_wheels_linux_aarch64
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://test.pypi.org/p/qurrium
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: shared-wheel-builds-arm
          path: deploy
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: deploy

  # ---

  # sdist:
  #   if: github.repository == 'harui2019/qurry'
  #   name: Build and publish sdist
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #   strategy:
  #     fail-fast: false
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.CI_TOKEN }}
  #         submodules: true
  #     - uses: actions/setup-python@v4
  #       name: Install Python
  #       with:
  #         python-version: "3.11"
  #     - name: Reversion
  #       run: python get_version.py --release stable
  #     - name: Install deps
  #       run: pip install -U build
  #     - name: Build sdist
  #       run: python -m build . --sdist
  #     - name: Publish distribution üì¶ to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
