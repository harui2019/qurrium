# from https://github.com/dear-github/dear-github/issues/214#issuecomment-1060001840
# from https://github.com/dear-github/dear-github/issues/214#issuecomment-1080042519

name: Release
on:
  pull_request:
    branches:
      - pre-release
      - pre-release-*
      - main
      - main-*
    types:
      - closed
env:
  CARGO_TERM_COLOR: always

jobs:
  create_tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Git user
        run: |
          git config --global user.name ${{ github.repository_owner }}_action_bot
          git config --global user.email ${{ github.repository_owner }}@users.noreply.github.com
      - name: Update Pip
        run: |
          pip install --upgrade pipenv pip
          pip install toml

      - name: Bump Dev Version and Create Tag
        if: contains(github.event.pull_request.title, 'dev:')
        run: python bump_version.py -b dev
      - name: Bump Minor Version and Create Tag
        if: contains(github.event.pull_request.title, 'patch:')
        run: python bump_version.py -b minor

      - name: Read Version File Nightly
        if: github.event.pull_request.base.ref == 'pre-release' || startsWith(github.event.pull_request.base.ref, 'pre-release-')
        run: python get_version.py --release nightly
      - name: Read Version File Stable
        if: github.event.pull_request.base.ref == 'main' || startsWith(github.event.pull_request.base.ref, 'main-')
        run: python get_version.py --release stable

      - name: Check out Version
        run: |
          echo '| Version: ${{ env.VERSION }} in action'
      - name: Check Version Tag
        uses: mukunku/tag-exists-action@v1.2.0
        id: checkTag
        with:
          tag: ${{ env.VERSION }}

      - name: Create Version Tag
        run: |
          if ${{ steps.checkTag.outputs.exists }} ; then
            echo "| Tag exists, skipped add"
          else 
            echo "| Tag doesn't exist or error in command"
            git tag -a ${{ env.VERSION }} -m "chore(version): update version to ${{ env.VERSION }}"
            git push origin ${{ env.VERSION }}
          fi

      - name: Get custom tarball name
        id: get_tarball_name
        run: echo ::set-output name=TARBALL_NAME::qurry-${{ github.ref_name }}
      - name: Get archived folder name for custom tarball
        id: get_archived_folder_name
        run: echo ::set-output name=ARCHIVED_FOLDER::${{ github.repository_owner }}-qurry-$(git rev-parse --short HEAD)
      - name: Create custom tarball artifact
        run: |
          mkdir -p artifacts
          tar czhvf ${{ steps.get_tarball_name.outputs.TARBALL_NAME }}-${{ env.VERSION }}.tar.gz \
            --exclude="*metarepo-cpe-tag*" \
            --directory=../ \
            qurry/crates/ qurry/tests/ qurry/qurry/ \
            qurry/pyproject.toml qurry/setup.py qurry/requirements.txt \
            qurry/Cargo.toml qurry/Cargo.lock qurry/MANIFEST.in \
            qurry/.gitignore qurry/.gitmodules qurry/README.md \
            --transform s/qurry/${{ steps.get_archived_folder_name.outputs.ARCHIVED_FOLDER }}/

      - name: Create Nightly Draft Release
        if: github.event.pull_request.base.ref == 'pre-release' || startsWith(github.event.pull_request.base.ref, 'pre-release-')
        id: create_release_nightly
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          name: ${{ env.VERSION }} nightly
          body: |
            NIGHTLY_DRAFT
          draft: true
          prerelease: true

      - name: Create Stable Draft Release
        if: github.event.pull_request.base.ref == 'main' || startsWith(github.event.pull_request.base.ref, 'main-')
        id: create_release_stable
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          name: ${{ env.VERSION }} stable
          body: |
            STABLE_DRAFT
          draft: true
          prerelease: false

      - name: Upload TAR.GZ release asset
        id: upload-tar-gz-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_tarball_name.outputs.TARBALL_NAME }}-${{ env.VERSION }}.tar.gz
          asset_name: ${{ steps.get_tarball_name.outputs.TARBALL_NAME }}-${{ env.VERSION }}.tar.gz
          asset_content_type: application/gzip
