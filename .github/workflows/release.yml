# from https://github.com/dear-github/dear-github/issues/214#issuecomment-1060001840

name: draft-release-with-tag
on:
  push:
    branches:
      - main
      - pre-release
env:
  CARGO_TERM_COLOR: always
      

jobs:
  create_tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Git user
        run: |
          git config --global user.name 'Your Name'
          git config --global user.email 'youremail@example.com'

      - name: Read Version File
        run: python get_version.py

      - name: Check out Version
        run: |
          echo '| Version: ${{ env.VERSION }} in action'

      - name: Create Version Tag
        run: |
          if git show-ref --tags ${{ env.VERSION }} --quiet; then
            echo "| Tag exists, skipped add"
          else 
            echo "| Tag doesn't exist or error in command"
            git tag -a ${{ env.VERSION }} -m "New release"
            git push origin ${{ env.VERSION }}
          fi

      - name: Get custom tarball name
        id: get_tarball_name
        run: echo ::set-output name=TARBALL_NAME::vulner-${{ github.ref_name }}
  
      - name: Get archived folder name for custom tarball
        id: get_archived_folder_name
        run: echo ::set-output name=ARCHIVED_FOLDER::${{ github.repository_owner }}-vulner-$(git rev-parse --short HEAD)
  
      - name: Create custom tarball artifact
        run: |
          mkdir -p artifacts
          tar czhvf \
            artifacts/${{ steps.get_tarball_name.outputs.TARBALL_NAME }}.tar.gz \
            --exclude="*metarepo-cpe-tag*" \
            --directory=../ \
            vulner/crates/ vulner/Cargo.lock vulner/Cargo.toml vulner/Makefile vulner/scripts/ vulner/README.md vulner/LICENSE \
            --transform s/vulner/${{ steps.get_archived_folder_name.outputs.ARCHIVED_FOLDER }}/
  
      - name: Build from custom tarball artifact
        run: |
          mkdir -p build
          tar xzvf artifacts/${{ steps.get_tarball_name.outputs.TARBALL_NAME }}.tar.gz \
            --directory=build
          cd build/${{ steps.get_archived_folder_name.outputs.ARCHIVED_FOLDER }}
          make build
  
      - name: Create draft release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            DRAFT
          draft: true
          prerelease: true
  
      - name: Upload TAR.GZ release asset
        id: upload-tar-gz-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/${{ steps.get_tarball_name.outputs.TARBALL_NAME }}.tar.gz
          asset_name: ${{ steps.get_tarball_name.outputs.TARBALL_NAME }}.tar.gz
          asset_content_type: application/gzip
  