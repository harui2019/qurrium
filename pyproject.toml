[build-system]
requires = ["pytest", "cython", "setuptools", "setuptools-rust", "wheel"]
build-backend = "setuptools.build_meta"

# If you find some configurations are similar to what qiskit does,
# yes, it does. I 'learned' from them.

[project]
name = "qurry"
dynamic = ["version", "readme", "dependencies"]
description = "Qurry 🍛 - The Measuring Tool for Renyi Entropy, Loschmidt Echo, and Magnetization Squared, The Library of Some Common Cases"
authors = [{ name = "Huai-Chung Chang", email = "harui2019@proton.me" }]
classifiers = [
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
]
requires-python = ">=3.9"

[project.urls]
Issues = "https://github.com/harui2019/qurry/issues"
Homepage = "https://github.com/harui2019/qurry"

[tool.setuptools.packages.find]
include = ['qurry*', 'qurry.capsule*']
exclude = ['cmake', 'symengine', 'tests']

[tool.setuptools]
include-package-data = true

[tool.setuptools.dynamic]
version = { file = "qurry/VERSION.txt" }
readme = { file = "README.md", content-type = "text/markdown" }
dependencies = { file = "requirements.txt" }


[tool.cibuildwheel]
manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
skip = [
    "*-musllinux_i686", # rust tier 2 support, qiskit did not support musllinux
    "pp*",              # Qiskit and Qurry are not pure python packages, See https://github.com/harui2019/qurry/issues/93#issuecomment-1801837481
    "cp38-*",           # Not support and won't support for we write type hint in 3.9 syntax.
    "cp313-*",          # Just too recent
    "*-musllinux_*",    # qiskit did not support musllinux
    # "*-manylinux_i686", # scipy dependency issue, Check issue https://github.com/harui2019/qurry/issues/93 for details
    "*_universal2", # univeral2 fail test on ARM64 runner but it should not be this, See: https://github.com/harui2019/qurry/issues/187
]
test-skip = "*win32 *linux_i686 *_universal2"
# build = ["*-manylinux_aarch64"]
# before-all = [
#     'echo "======================================================================"',
#     'echo "### Building ........................................................."',
#     'echo "======================================================================"',
#     "pip install --upgrade auditwheel auditwheel-symbols",
#     "pip install --upgrade setuptools_rust Cython setuptools toml",
# ]
environment = { PATH = "$HOME/.cargo/bin:$PATH" }
before-build = [
    "echo ''",
    'echo "======================================================================"',
    'echo "### Building ........................................................."',
    'echo "======================================================================"',
    "which python",
    "pip install --upgrade pipenv wheel pip",
    "pip install --upgrade auditwheel auditwheel-symbols",
    "pip install --upgrade setuptools_rust Cython setuptools toml wheel",
]
before-test = [
    "echo ''",
    'echo "======================================================================"',
    'echo "### Testing Environment Preparing ...................................."',
    'echo "======================================================================"',
    "pip install scipy",
    "pip install pytest",
    "cd {project} && pip install . --upgrade && cd ..",
    'echo "======================================================================"',
    'echo "### Test Start ......................................................."',
    'echo "======================================================================"',
    "echo ''",
]
test-command = ["pytest {project}/tests"]
# build = ["cp39-macosx_universal2"]

[tool.cibuildwheel.linux]
before-all = [
    "echo ''",
    'echo "======================================================================"',
    'echo "### Linux Setup ......................................................"',
    'echo "======================================================================"',
    "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=nightly --profile=minimal -y",
    'source "$HOME/.cargo/env"',
    "rustup show",
]
# before-test = [
#     'echo "======================================================================"',
#     'echo "### Testing on Lunux.................................................."',
#     'echo "======================================================================"',
#     # Solution for scipy dependency issue
#     # Check https://github.com/harui2019/qurry/issues/95 for details
#     # https://github.com/scipy/scipy/issues/16308#issuecomment-1560669084
#     # "git clone https://github.com/xianyi/OpenBLAS.git",
#     # "cd OpenBLAS",
#     # "make -j8",
#     # "make PREFIX=/usr/local/OpenBLAS install",
#     # "export PKG_CONFIG_PATH=/usr/local/OpenBLAS/lib/pkgconfig",
#     # "cd ..",
#     # "rm -rf OpenBLAS",
#     # end of solution
#     "pip install scipy",
#     "pip install pytest",
# ]

[tool.cibuildwheel.macos]
# environment = { MACOSX_DEPLOYMENT_TARGET = "10.12", CARGO_BUILD_TARGET = "aarch64-apple-darwin", PYO3_CROSS_LIB_DIR = "/Library/Frameworks/Python.framework/Versions/$(python -c 'import sys; print(str(sys.version_info[0]) + \".\" + str(sys.version_info[1]))')/lib/python$(python -c 'import sys; print(str(sys.version_info[0]) + \".\" + str(sys.version_info[1]))')" }
# environment = { MACOSX_DEPLOYMENT_TARGET = "10.12", CARGO_BUILD_TARGET = "aarch64-apple-darwin", PYO3_CROSS_LIB_DIR= "PYO3_CROSS_LIB_DIR=$(which python | sed 's|/bin/python|/lib/python|')$(python -c 'import sys; print(str(sys.version_info[0]) + \".\" + str(sys.version_info[1]))')"}
environment = { MACOSX_DEPLOYMENT_TARGET = "10.12" }
before-all = [
    "echo ''",
    'echo "======================================================================"',
    'echo "### MacOS Setup ......................................................"',
    'echo "======================================================================"',
    # "export PYO3_CROSS_LIB_DIR=$(which python | sed 's|/bin/python|/lib/python|')$(python -c 'import sys; print(str(sys.version_info[0]) + \".\" + str(sys.version_info[1]))')",
    # "echo $PYO3_CROSS_LIB_DIR",
    # 'echo "----------------------------------------------------------------------"',
    "curl https://sh.rustup.rs -sSf | bash -s -- --default-toolchain=nightly --profile=minimal -y",
    'source "$HOME/.cargo/env"',
    "rustup show",
    # "rustup target add aarch64-apple-darwin",
]

[tool.cibuildwheel.windows]
# PowerShell script
# before-all = [
#     'Write-Host "Downloading..."',
#     "Invoke-WebRequest -Uri https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe -OutFile rustup-init.exe",
#     'Write-Host "Installing Rust..." -ForegroundColor Cyan',
#     'Start-Process -FilePath .\rustup-init.exe -ArgumentList "--default-toolchain nightly --profile minimal -y" -NoNewWindow -Wait',
#     'Remove-Item .\rustup-init.exe',
#     '$env:Path = "$env:USERPROFILE\.cargo\bin"',
#     "rustup show",
# ]

# CMD script
before-all = [
    "echo ''",
    'echo "======================================================================"',
    'echo "### Windows Setup ...................................................."',
    'echo "======================================================================"',
    "echo Downloading...",
    "curl -o rustup-init.exe https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe",
    "echo Installing Rust...",
    "rustup-init.exe --default-toolchain nightly --profile minimal -y",
    "del rustup-init.exe",
    'set PATH=%USERPROFILE%\.cargo\bin;%PATH%',
    "rustup show",
]
before-build = [
    "echo ''",
    'echo "======================================================================"',
    'echo "### Building ........................................................."',
    'echo "======================================================================"',
    "python -m pip install --upgrade pipenv wheel pip",
    "python -m pip install --upgrade auditwheel auditwheel-symbols",
    "python -m pip install --upgrade setuptools_rust Cython setuptools toml wheel",
]
before-test = [
    "echo ''",
    'echo "======================================================================"',
    'echo "### Testing Environment Preparing ...................................."',
    'echo "======================================================================"',
    "python -m pip install scipy",
    "python -m pip install pytest",
    "cd {project} && python -m pip install . --upgrade && cd ..",
    'echo "======================================================================"',
    'echo "### Test Start ......................................................."',
    'echo "======================================================================"',
    "echo ''",
]

[tool.pylint."messages control"]
disable = [
    "too-many-lines",
    "too-many-branches",
    "too-many-locals",
    "too-many-nested-blocks",
    "too-many-statements",
    "too-many-instance-attributes",
    "too-many-arguments",
    "too-many-public-methods",
    "too-few-public-methods",
    "too-many-ancestors",
]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
