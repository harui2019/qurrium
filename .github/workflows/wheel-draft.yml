---
name: Wheel Builds
on:
  push:
    branches:
      - "main"
      - "pre-release"
      - "dev"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} of x86 series
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, macos-11, windows-latest]
        # Wating for Windows multiprocessing support
        os: [ubuntu-latest, macos-11]

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true
      - uses: actions/setup-python@v4
      - name: Update Pip
        run: |
          pip install --upgrade pipenv wheel pip
          pip install setuptools_rust setuptools
          pip install .
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.13.0

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI (Common Distro)
    needs:
      - build_wheels
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/qurry

    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: ./wheelhouse/*.whl
      - name: Publish distribution 📦 to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  build_wheels_macos_arm:
    name: Build wheels on macOS (${{ matrix.os }}) of arm64
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11]
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Python and Update Pip
        run: |
          pip install --upgrade pipenv wheel pip
          pip install setuptools_rust setuptools
          pip install .

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.13.0
        env:
          CIBW_BEFORE_ALL: rustup target add aarch64-apple-darwin
          CIBW_ARCHS_MACOS: arm64 universal2
          CIBW_ENVIRONMENT: >-
            CARGO_BUILD_TARGET="aarch64-apple-darwin"
            PYO3_CROSS_LIB_DIR="/Library/Frameworks/Python.framework/Versions/$(python -c 'import sys; print(str(sys.version_info[0])+"."+str(sys.version_info[1]))')/lib/python$(python -c 'import sys; print(str(sys.version_info[0])+"."+str(sys.version_info[1]))')"

  build_wheels_aarch64:
    name: Build wheels on ${{ matrix.os }} of aarch64
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.10"
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.13.0
        env:
          CIBW_ARCHS_LINUX: aarch64
