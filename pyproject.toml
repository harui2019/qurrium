[build-system]
requires = ["pytest", "cython", "setuptools", "setuptools-rust", "wheel"]
build-backend = "setuptools.build_meta"

# If you find some configurations are similar to what qiskit does,
# yes, it does. I 'learned' from them.

[project]
name = "qurry"
dynamic = ["version", "readme", "dependencies"]
description = "Qurry 🍛 - The Measuring Tool for Renyi Entropy, Loschmidt Echo, and Magnetization Squared, The Library of Some Common Cases"
authors = [{ name = "Huai-Chung Chang", email = "harui2019@proton.me" }]
classifiers = [
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
]
requires-python = ">=3.9"

[project.urls]
Issues = "https://github.com/harui2019/qurry/issues"
Homepage = "https://github.com/harui2019/qurry"

[tool.setuptools.packages.find]
include = ['qurry*', 'qurry.capsule*']
exclude = ['cmake', 'symengine', 'tests']

[tool.setuptools]
include-package-data = true

[tool.setuptools.dynamic]
version = { file = "qurry/VERSION.txt" }
readme = { file = "README.md", content-type = "text/markdown" }
dependencies = { file = "requirements.txt" }


[tool.cibuildwheel]
manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
skip = [
    "*-musllinux_i686", # rust tier 2 support, qiskit did not support musllinux
    "pp*",              # Qiskit and Qurry are not pure python packages, See https://github.com/harui2019/qurry/issues/93#issuecomment-1801837481
    "cp38-*",           # Not support and won't support for we write type hint in 3.9 syntax.
    "*-musllinux_*",    # qiskit did not support musllinux
    # "*-manylinux_i686", # scipy dependency issue, Check issue https://github.com/harui2019/qurry/issues/93 for details
]
test-skip = "*win32 *linux_i686"
# build = ["*-manylinux_aarch64"]
before-all = [
    'echo "======================================================================"',
    'echo "### Building ........................................................."',
    'echo "======================================================================"',
    "pip install auditwheel-symbols",
    "pip install setuptools_rust Cython setuptools toml",
]
environment = { PATH = "$HOME/.cargo/bin:$PATH" }
before-test = [
    'echo "======================================================================"',
    'echo "### Testing .........................................................."',
    'echo "======================================================================"',
    "pip install scipy",
    "pip install setuptools_rust Cython setuptools toml",
    "cd {project} && pip install . --upgrade && cd ..",
]
test-command = ["pytest {project}/tests"]

[tool.cibuildwheel.linux]
# before-test = [
#     'echo "======================================================================"',
#     'echo "### Testing on Lunux.................................................."',
#     'echo "======================================================================"',
#     # Solution for scipy dependency issue
#     # Check https://github.com/harui2019/qurry/issues/95 for details
#     # https://github.com/scipy/scipy/issues/16308#issuecomment-1560669084
#     # "git clone https://github.com/xianyi/OpenBLAS.git",
#     # "cd OpenBLAS",
#     # "make -j8",
#     # "make PREFIX=/usr/local/OpenBLAS install",
#     # "export PKG_CONFIG_PATH=/usr/local/OpenBLAS/lib/pkgconfig",
#     # "cd ..",
#     # "rm -rf OpenBLAS",
#     # end of solution
#     "pip install scipy",
#     "pip install pytest",
# ]

[tool.cibuildwheel.macos]
before-all = ['source "$HOME/.cargo/env"']

[tool.pylint."messages control"]
disable = [
    "too-many-lines",
    "too-many-branches",
    "too-many-locals",
    "too-many-nested-blocks",
    "too-many-statements",
    "too-many-instance-attributes",
    "too-many-arguments",
    "too-many-public-methods",
    "too-few-public-methods",
    "too-many-ancestors",
]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
