# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches:
      - "main"
      - "pre-release"
  pull_request:
    branches:
      - "main"
      - "pre-release"
      - "dev"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        target: [x86_64, x86, aarch64]

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pipenv wheel
          python -m pip install flake8 pytest matplotlib
          python -m pip install --upgrade urllib3
          python -m pip install --upgrade --user setuptools setuptools-rust

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

      - name: Preparing Pytest
        run: |
          python -c "print('### Preparing setup.py '.ljust(70, '.'))"
          pip install -e .
          # python -c "print('### Preparing requirements.txt '.ljust(70, '.'))
          # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python -c "print('### Dependencies are ready to go '.ljust(70, '.'))"

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          # python -m pytest tests/
          pytest

  build-macos:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        target: [x86_64, aarch64]

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pipenv wheel pip
          python -m pip install flake8 pytest matplotlib
          pip install --upgrade urllib3
          # A bug waiting for fixing, https://github.com/pypa/setuptools/issues/3278
          # pip install --upgrade --user setuptools==58.3.0

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

      - name: Preparing Pytest
        run: |
          python -c "print('### Preparing setup.py '.ljust(70, '.'))"
          pip install -e .
          # python -c "print('### Preparing requirements.txt '.ljust(70, '.'))
          # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python -c "print('### Dependencies are ready to go '.ljust(70, '.'))"

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          # python -m pytest tests/
          pytest
